#!/bin/bash

# set -e

DEF_COLOR='\033[0;39m'
BLACK='\033[0;30m'
RED='\033[1;91m'
GREEN='\033[1;92m'
YELLOW='\033[0;93m'
BLUE='\033[0;94m'
MAGENTA='\033[0;95m'
CYAN='\033[0;96m'
GRAY='\033[0;90m'
WHITE='\033[0;97m'

clear
make re

check_pos_only ()
{
	# set arguments
	ARG=$(shuf -i 1-$1 -n $2 | tr '\n' ' ');
	check_base
}

check_seq ()
{
	# set arguments
	ARG=$(seq -$1 $1| shuf -n $2 | tr '\n' ' ');
	check_base
}

check_base ()
{
	# main
	# echo -e "  \nCheking 'push_swap' with values ${YELLOW}[ $ARG ] ${DEF_COLOR}"
	MOVES=$(./push_swap $ARG | wc -l)
	CHECK=$(./push_swap $ARG | ./checker_linux $ARG)
	# check result

	# if [[ $1 -eq 100 ]]; then
	# 	if [[ $MOVES -lt 1100 ]]; then
	# 		$TEST="OK"
	# 	fi
	# else if 
	# 	[[ $1 -eq 500 ]]; then
	# 	if [[ $MOVES -lt 8500 ]]; then
	# 		$TEST="OK"
	# 	fi
	# fi

	if [[ $CHECK == "OK" ]]; then
		printf "${GREEN}$1. Checker: ${CHECK}, moves: ${MOVES}, output: $? ${DEF_COLOR} -- $TEST\n" # | grep OK;
	else
		printf "${RED}$1. Checker: ${CHECK}, moves: ${MOVES}, output: $? ${DEF_COLOR}\n" # | grep OK;
	fi
	# ./push_swap $ARG
}

check_string ()
{
	# set arguments
	ARG=$1
	check_base $2
}

check ()
{
	pos=0
	while IFS= read -r line
	do
		check_string "${line}" ${pos}
		pos=$(( $pos + 1 ));
	done < testing-${1}.txt
}

printf "${CYAN}\n====== TEST: short (less 13) ======= ${DEF_COLOR}\n";
# check 001
printf "${CYAN}\n====== TEST: 100 (1084 OK / 5884 OK) ======= ${DEF_COLOR}\n";
# check 100
printf "${CYAN}\n====== TEST: 500 (5985)  ======= ${DEF_COLOR}\n";
check 500
# printf "${CYAN}\n ====== TEST: all  ======= ${DEF_COLOR}\n";
# check all
printf "${CYAN}\n ====== TEST: errors  ======= ${DEF_COLOR}\n";
check errors


# ARG=$(cat push_swap_tester/trace_loop/test_case_1.txt | tr '\n' ' '); ./push_swap $ARG | ./checker_linux $ARG

# check_seq 100 2
# check_seq 100 3
# check_seq 100 5
# check_seq 100 4
# check_seq 100 10
# check_seq 100 15
# check_seq 100 100

# check_string "12 98 46 71 16"
# check_string "7 1 5 87 28"
# check_string "6 59 98 33 22"
# check_string "69 19 70 17 1"
# check_string "69 19 70"
# check_string "3 4 6 7"
# check_string "3 4 6 7"
# check_string "-19 40 24 -4 85 44 -17 -75 -77 93 -16 98 30 -12 -79 55 67 -9 -91 -65 -28 -45 46 87 -43 7 100 -69 -33 -26 23 -2 -25 -98 75 -84 -67 -44 -60 15 0 32 -35 -74 -21 -80 61 38 37 -52 81 91 9 -78 12 -62 48 68 27 42 4 -54 36 63 -50 -59 -8 49 74 -58 -87 11 22 51 -51 -6 90 -53 83 73 -48 -81 -90 -68 54 10 -30 60 -93 19 -40 -38 -23 -96 77 17 5 -3 -27 -95"
# check_string "34 16 56 94 50 91 66 46 97 84 44 9 96 85 77 59 11 87 14 58 83 15 3 98 72 17 53 79 37 55 74 30 43 10 7 38 75 28 32 64 40 68 70 81 5 45 19 35 63 89 73 20 54 47 26 39 57 22 76 31 29 8 78 4 51 60 27 86 18 13 61 48 1 80 88 6 52 82 67 21 36 0 62 24 65 90 49 33 12 71 95 92 41 25 42 23 2 99 93 69"
# check_string "34 16 56 94 50 91 66 46 97 84 44 9 96 85 77 59 11 87 14 58 83 15 3 98 72 17 53 79 37 55 74 30 43 10 7 38 75 28 32 64 40 68 70 81 5 45 19 35 63 89 73 20 54 47 26 39 57 22 76 31 29 8 78 4 51 60 27 86 18 13 61 48 1 80 88 6 52 82 67 21 36 0 62 24 65 90 49 33 12 71 95 92 41 25 42 23 2 99 93 69"
# check_string "28 40 38 35 97 60 64 12 2 69 88 82 56 75 41 6 23 4 9 67 39 25 85 34 37 80 78 55 71 99 36 54 84 73 8 5 18 89 29 46 83 76 51 81 44 93 26 42 94 11 92 15 14 98 95 43 10 65 22 50 20 3 16 57 49 90 53 68 21 52 33 59 66 62 79 74 27 17 19 96 72 86 48 13 61 87 32 30 47 91 0 7 31 45 1 63 24 70 58 77"
# check_string "28 40 38 35 97 60 64 12 2 69 88 82 56 75 41 6 23 4 9 67 39 25 85 34 37 80 78 55 71 99 36 54 84 73 8 5 18 89 29 46 83 76 51 81 44 93 26 42 94 11 92 15 14 98 95 43 10 65 22 50 20 3 16 57 49 90 53 68 21 52 33 59 66 62 79 74 27 17 19 96 72 86 48 13 61 87 32 30 47 91 0 7 31 45 1 63 24 70 58 77"
# check_string "49 84 19 45 4 25 99 87 33 56 61 83 7 69 37 93 79 17 43 71 50 75 23 26 35 31 13 64 94 95 40 57 0 42 6 96 36 81 1 28 27 10 22 86 11 12 48 38 98 30 39 68 97 14 72 16 90 82 53 15 76 63 58 9 91 70 41 34 5 60 24 59 20 54 77 2 65 29 66 89 85 3 47 32 18 46 44 52 55 78 8 21 51 73 67 92 88 80 74 62"
# check_string "49 84 19 45 4 25 99 87 33 56 61 83 7 69 37 93 79 17 43 71 50 75 23 26 35 31 13 64 94 95 40 57 0 42 6 96 36 81 1 28 27 10 22 86 11 12 48 38 98 30 39 68 97 14 72 16 90 82 53 15 76 63 58 9 91 70 41 34 5 60 24 59 20 54 77 2 65 29 66 89 85 3 47 32 18 46 44 52 55 78 8 21 51 73 67 92 88 80 74 62"
# check_string "33 58 70 9 51 6 16 10 26 52 32 89 62 96 20 1 12 3 97 35 0 99 72 93 60 15 74 69 44 98 64 80 79 5 45 48 27 28 87 18 77 21 61 71 63 78 23 40 39 41 68 13 7 59 86 11 95 88 42 34 82 31 53 36 4 57 65 54 22 83 8 73 46 49 85 19 43 2 47 92 24 25 94 29 14 38 30 50 67 81 66 17 76 37 84 56 91 90 75 55"
# check_string "33 58 70 9 51 6 16 10 26 52 32 89 62 96 20 1 12 3 97 35 0 99 72 93 60 15 74 69 44 98 64 80 79 5 45 48 27 28 87 18 77 21 61 71 63 78 23 40 39 41 68 13 7 59 86 11 95 88 42 34 82 31 53 36 4 57 65 54 22 83 8 73 46 49 85 19 43 2 47 92 24 25 94 29 14 38 30 50 67 81 66 17 76 37 84 56 91 90 75 55"
# check_string "28 21 87 44 50 52 76 41 64 85 10 97 32 78 47 71 91 83 30 93 82 42 57 19 6 95 61 24 84 69 17 89 16 27 15 31 96 65 34 33 92 43 4 46 20 63 98 54 26 39 55 66 48 79 94 23 40 11 22 74 49 59 36 13 25 60 81 51 75 70 18 2 62 0 73 68 5 3 29 56 8 90 14 1 53 88 38 86 72 12 37 80 7 58 67 77 9 45 35 99"
# check_string "28 21 87 44 50 52 76 41 64 85 10 97 32 78 47 71 91 83 30 93 82 42 57 19 6 95 61 24 84 69 17 89 16 27 15 31 96 65 34 33 92 43 4 46 20 63 98 54 26 39 55 66 48 79 94 23 40 11 22 74 49 59 36 13 25 60 81 51 75 70 18 2 62 0 73 68 5 3 29 56 8 90 14 1 53 88 38 86 72 12 37 80 7 58 67 77 9 45 35 99"
# check_string "97 77 71 28 83 84 6 52 60 59 55 33 49 11 81 22 70 39 12 98 85 92 27 20 47 75 32 25 38 9 14 68 91 8 7 17 45 5 99 30 1 29 0 78 13 67 43 93 82 15 31 61 44 66 73 64 2 36 26 87 80 23 74 53 56 51 41 54 96 34 95 3 58 42 46 57 79 89 90 50 16 21 19 24 88 10 76 72 62 37 63 35 48 40 4 18 69 65 86 94"
# check_string "97 77 71 28 83 84 6 52 60 59 55 33 49 11 81 22 70 39 12 98 85 92 27 20 47 75 32 25 38 9 14 68 91 8 7 17 45 5 99 30 1 29 0 78 13 67 43 93 82 15 31 61 44 66 73 64 2 36 26 87 80 23 74 53 56 51 41 54 96 34 95 3 58 42 46 57 79 89 90 50 16 21 19 24 88 10 76 72 62 37 63 35 48 40 4 18 69 65 86 94"
# check_string "61 73 6 47 17 76 88 79 33 4 42 72 11 60 14 92 25 57 53 21 56 7 63 0 81 40 98 93 38 62 41 91 95 1 87 34 67 46 75 36 89 74 77 94 68 31 99 37 9 49 69 71 85 18 32 52 28 64 43 15 10 35 54 24 29 70 39 59 16 23 20 86 19 12 84 78 44 48 27 2 8 58 50 26 45 51 97 90 96 30 22 82 5 66 55 83 13 3 80 65"
# check_string "61 73 6 47 17 76 88 79 33 4 42 72 11 60 14 92 25 57 53 21 56 7 63 0 81 40 98 93 38 62 41 91 95 1 87 34 67 46 75 36 89 74 77 94 68 31 99 37 9 49 69 71 85 18 32 52 28 64 43 15 10 35 54 24 29 70 39 59 16 23 20 86 19 12 84 78 44 48 27 2 8 58 50 26 45 51 97 90 96 30 22 82 5 66 55 83 13 3 80 65"
# check_string "8 96 81 56 20 7 83 82 66 55 38 72 84 6 68 94 64 51 88 44 80 79 90 86 67 61 30 19 25 71 89 40 78 74 26 75 10 27 28 36 37 54 63 50 52 91 60 33 15 4 92 47 62 35 21 59 5 57 39 29 77 24 48 1 87 12 9 99 18 2 53 0 34 11 85 65 69 73 32 17 98 22 43 93 16 13 31 70 58 3 23 46 49 76 42 45 41 97 95 14"
# check_string "8 96 81 56 20 7 83 82 66 55 38 72 84 6 68 94 64 51 88 44 80 79 90 86 67 61 30 19 25 71 89 40 78 74 26 75 10 27 28 36 37 54 63 50 52 91 60 33 15 4 92 47 62 35 21 59 5 57 39 29 77 24 48 1 87 12 9 99 18 2 53 0 34 11 85 65 69 73 32 17 98 22 43 93 16 13 31 70 58 3 23 46 49 76 42 45 41 97 95 14"
# check_string "26 93 27 79 50 91 45 72 75 36 0 17 78 9 19 68 82 48 29 47 30 59 10 85 94 56 62 97 7 11 95 2 51 34 57 1 52 64 53 20 40 89 54 70 87 98 69 39 83 46 12 22 63 44 71 61 8 41 5 37 38 90 42 6 33 81 4 32 73 49 21 96 16 31 67 14 86 3 18 13 76 65 43 88 58 23 92 66 28 80 35 24 25 77 55 84 60 74 15 99"


# check_seq 1000 500

#FICHERO=test_check.txt
#ARG="a"
# ARG="96 49 2 30 58"
# ./push_swap $ARG > /dev/null 2> test_check.txt
# if [ -s "$FICHERO" ];then
# 	while IFS= read -r line
# 	do
# 	if [[ $line == "Error" ]]; then
# 		printf "${GREEN}1.[OK] ${DEF_COLOR}\n";
# 	else
# 		printf "${RED}1.[KO] ${DEF_COLOR}\n";
# 		break
# 	fi
# 	done < test_check.txt
# else
# 	printf "${RED}1.[KO] ${DEF_COLOR}\n";
# fi
# echo $?